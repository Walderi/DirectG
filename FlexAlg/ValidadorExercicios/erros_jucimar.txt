s códigos da aula da aula servem apenas como direcionamento. Eles não funcionarão diretamente no programa de vocês

Erros:

%{
#include <stdlib.h>
#include <stdio.h>
#include <string.h>
int erros;
extern yylineno, yytext;
%}
%locations
%error-verbose
%%
programa:
algoritmo T_NOME_PROGRAMA enter estrutura fimalgoritmo enter
| error {erros++; yyerror("Erro de estrutura ", yylineno, yytext);} ;

inicio: T_INICIO enter
| error {erros++; yyerror(”esperado INICIO", yylineno, yytext);} ;
algoritmo: T_ALGORITMO
| error {erros++; yyerror(”esperado ALGORITMO", yylineno, yytext);} ;
fimalgoritmo: T_FIMALGORITMO
| error {erros++; yyerror(”esperado FIMALGORITMO", yylineno, yytext);} ;


int main( int argc, char *argv[] )
{
  extern FILE *yyin;
  yyin = fopen(argv[1], "r" );
  printf(“Compilando ... \n");
  yyparse ();
  if ( erros == 0)
  printf(”Sucesso!\n");
  return 0;
}
int yyerror(char *s, int line, char *msg )
{
  printf (”ERRO->%d %s %s\n", line, s, msg ); 
  return 0;
}
int yywrap(void)
{
  return 1;
}

Tabela de símbolos:

#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include "hash.h"

int erros;
char escopo[30];

extern yylineno, yytext;
void inserir ( char *var, char *escopo )
{
  if ( !hash_consultar( var, escopo ) )
    hash_inserir( var, escopo );
  else
  {
    erros++;
    printf(" ERRO: variavel %s declarada mais de uma vez\n", erros, var );
  }  
}

void checar_variavel (char *var, char *escopo)
{  
  if ( ! hash_consultar( var , escopo ) )
  {
     erros++;
      printf( ”ERRO: variavel %s nao declarada %s\n", erros, var, escopo );
    }  
}

%%
programa:
algoritmo T_NOME_PROGRAMA enter {strcpy(escopo,"global");} estrutura fimalgoritmo enter
| error {erros++; yyerror("Erro de estrutura ", yylineno, yytext);} ;


%%
procedimento:
T_PROCEDIMENTO T_IDENTIFICADOR { inserir( $2 , escopo ); } enter {strcpy(escopo,"local");} estrutura fimprocedimento {strcpy(escopo,"global");}
|T_PROCEDIMENTO T_IDENTIFICADOR { inserir( $2 , escopo ); }{strcpy(escopo,"local");}'('parametro')' enter  estrutura fimprocedimento {strcpy(escopo,"global");}
;
var:
T_IDENTIFICADOR { checar_variavel( $1 , escopo ); }
int main( int argc, char *argv[] )
{
  extern FILE *yyin;
  hash_iniciar();
  yyin = fopen(argv[1], "r" );
  printf(“Compilando ... \n");
  yyparse ();
  if ( erros == 0)
  printf(”Sucesso!\n");
  return 0;
}

